    steps:
    - name: 'gcr.io/cloud-builders/gcloud'
      entrypoint: 'bash'
      args:
        - '-c'
        - |
          echo project is ${PROJECT_ID}
          if [ $BRANCH_NAME = master ]
          then
            sed -i "s/_VER_/minified/" src/app.js
            mv Dockerfile.min Dockerfile
            echo "charlie-test-master" > cluster.txt
          else
            sed -i "s/_VER_/UN minified/" src/app.js
            mv Dockerfile.nomin Dockerfile
            echo "azad-test-cluster" > cluster.txt
          fi
                    

    - name: 'gcr.io/cloud-builders/docker'
      args: [ 'build', '-t', 'gcr.io/${PROJECT_ID}/quickstart-image:$BRANCH_NAME-$REVISION_ID', '.' ]
      
    - name: 'gcr.io/cloud-builders/docker'
      args: ['push', 'gcr.io/$PROJECT_ID/quickstart-image']
    
    - name: 'gcr.io/cloud-builders/kubectl'
      entrypoint: 'bash' 
      args: 
        - '-c'
        - |
          sed -i "s/IMAGE_TAG/$BRANCH_NAME-$REVISION_ID/" deploy.yaml
          sed -i "s/PROJECT_ID/${PROJECT_ID}/" deploy.yaml

          #set the namespce
          if [ $BRANCH_NAME = staging ]
          then
            NS="staging"
          else
            NS="default"
          fi

          echo cluster is `cat cluster.txt`
          echo namespace id $NS

          export CLOUDSDK_COMPUTE_ZONE=asia-south1-a
          export CLOUDSDK_CONTAINER_CLUSTER=`cat cluster.txt`
          /builder/kubectl.bash apply -f deploy.yaml --namespace=$NS